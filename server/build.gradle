/*
 * Copyright (c) 2017. iDoc LLC
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     (1) Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *     (2) Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *
 *     (3)The name of the author may not be used to
 *     endorse or promote products derived from this software without
 *     specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

import java.text.SimpleDateFormat

buildscript {
    repositories {
        maven {
            url "https://maven.eveoh.nl/content/repositories/releases"
        }
        jcenter()
    }

    dependencies {
        classpath "nl.eveoh:gradle-aspectj:1.6"
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

project.ext {
    aspectjVersion = '1.8.4'
}

apply plugin: 'aspectj'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'idea'
apply plugin: 'java'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

project.ext.set("jerseyVersion","1.19.3")
project.ext.set("slf4jVersion","1.7.25")
project.ext.set("logbackVersion","1.2.2")
project.ext.set("postgresqlJDBCVersion","42.2.2")
project.ext.set("luceneVersion","6.3.0")
project.ext.set("distPath","/var/www/")
project.ext.set("asyncHttpClientVersion","1.9.40")
project.ext.set("javaWebSocketVersion","1.3.0")
project.ext.set("aspectjVersion", "1.8.4")

allprojects {
    group = 'ua.papka24.server'
    version = ''
    sourceCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'
}
def hashResult

sourceSets {
    main {
        java { srcDir 'src/main/java' }
        resources { srcDir 'src/main/resources' }
    }
}

task setVersionProperty {
    def result = new ByteArrayOutputStream()
    exec{
        executable = "git"
        args = ['log', '-1', '--format=%ct']
        standardOutput = result
    }
//    version = (new SimpleDateFormat("yyMMdd")).format(new Date(1000*Long.parseLong(result.toString().replaceAll("[^\\d.]", ""))))
    version = '24'

    def commit = new ByteArrayOutputStream()
    exec{
        executable = "git"
        args = ['rev-parse', '--short', 'HEAD']
        standardOutput = commit
    }
    hashResult = commit.toString().trim().replace('\n','').replace('\r','')
}

task dist(){
    it.dependsOn setVersionProperty, shadowJar
    doLast {
        copy{
            from shadowJar.archivePath
            into distPath
        }
//        ant.symlink(failonerror:false, overwrite: true, resource: ("${distPath}papka-${version}.jar"), link: "${distPath}papka.jar")
        ant.symlink(failonerror:false, overwrite: true, resource: ("${distPath}papka-24.jar"), link: "${distPath}papka.jar")
    }
}

shadowJar {
    baseName = 'papka'
    classifier = ''

    mergeServiceFiles()

    manifest {
        attributes 'Implementation-Title': 'PapkaServer',
                'Implementation-Version': version,
                'Specification-Version' : hashResult,
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Main-Class': "ua.papka24.server.Main"
    }

    exclude 'sql/select/'
}

test{
    useTestNG()
}

repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/groups/snapshots"
    }
}

dependencies {
    compile "org.apache.commons:commons-lang3:3.5"
    compile "org.apache.httpcomponents:httpclient:4.5.3"
    compile 'org.apache.httpcomponents:httpasyncclient:4.1.3'
    compile 'org.apache.httpcomponents:httpcore:4.4.6'
    compile "com.sun.jersey:jersey-grizzly2:$jerseyVersion"
    compile "com.ning:async-http-client:$asyncHttpClientVersion"
    compile "org.java-websocket:Java-WebSocket:$javaWebSocketVersion"
    compile 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.13.1'
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "ch.qos.logback:logback-core:$logbackVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "org.apache.tika:tika-core:1.14"
    compile 'org.apache.pdfbox:pdfbox:2.0.5'
    compile 'org.apache.pdfbox:fontbox:2.0.5'
    compile 'org.bouncycastle:bcprov-jdk15on:1.57'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.57'
    compile 'org.apache.commons:commons-email:1.4'
    compile 'net.jodah:expiringmap:0.5.8'
    compile 'com.zaxxer:HikariCP:2.6.1'
    compile "com.google.code.gson:gson:2.8.0"
    compile 'com.mortennobel:java-image-scaling:0.8.6'
    compile 'com.datastax.cassandra:cassandra-driver-core:3.2.0'
    compile 'redis.clients:jedis:2.9.0'
    compile 'org.apache.commons:commons-pool2:2.4.2'
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.itextpdf:itextpdf:5.5.11'
    compile 'org.freemarker:freemarker:2.3.26-incubating'
    compile 'com.warrenstrange:googleauth:1.1.1'
    compile 'commons-io:commons-io:2.5'
    compile "org.postgresql:postgresql:$postgresqlJDBCVersion"
    compile 'xalan:xalan:2.7.2'
}
